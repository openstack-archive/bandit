[tox]
minversion = 2.0
envlist = py35,py27,pep8
skipsdist = True

[testenv]
usedevelop = True
install_command = {toxinidir}/tools/tox_install.sh {env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt} {opts} {packages}
setenv =
    VIRTUAL_ENV={envdir}
    BRANCH_NAME=master
    CLIENT_NAME=bandit
   VIRTUAL_ENV={envdir}
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
commands =
          rm -f .testrepository/times.dbm
          coverage erase
          python setup.py testr --coverage --slowest --testr-args='{posargs}'
          coverage report -m
passenv = http_proxy HTTP_PROXY https_proxy HTTPS_PROXY no_proxy NO_PROXY
whitelist_externals =
    rm

[testenv:debug]
commands = oslo_debug_helper -t tests {posargs}

[testenv:linters]
usedevelop = False
deps = {[testenv:pep8]deps}
commands = flake8 {posargs} bandit
           flake8 {posargs} tests
           bandit-baseline -r bandit -ll -ii

[testenv:pep8]
usedevelop = False
deps = {[testenv]deps}
       .
commands = flake8 {posargs} bandit
           flake8 {posargs} tests
           {[testenv:pylint]commands}
           bandit-baseline -r bandit -ll -ii

[testenv:venv]
commands = {posargs}

[testenv:codesec]
usedevelop = False
deps = {[testenv]deps}
       .
commands = bandit-baseline -r bandit -ll -ii

[testenv:cover]
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
commands =
    python setup.py testr --coverage --testr-args='{posargs}'
    coverage report

[testenv:openstack_coverage]
deps = PyYAML>=3.1.0
       requests>=2.7.0
commands = python tools/openstack_coverage.py

[testenv:integration]
passenv = REPO_ROOT
whitelist_externals = bash
commands = bash scripts/integration-test.sh {posargs}

[testenv:docs]
commands=
    python setup.py build_sphinx

[flake8]
show-source = True
exclude=.venv,.git,.tox,dist,doc,*lib/python*,*egg,build,releasenotes

[testenv:releasenotes]
commands = sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[testenv:pylint]
commands = pylint --rcfile=pylintrc bandit
